{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":74608,"databundleVersionId":12966160,"sourceType":"competition"},{"sourceId":12189904,"sourceType":"datasetVersion","datasetId":7678100},{"sourceId":12237259,"sourceType":"datasetVersion","datasetId":7706066},{"sourceId":12501403,"sourceType":"datasetVersion","datasetId":7887657}],"dockerImageVersionId":31090,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install /kaggle/input/rdkit-2025-3-3-cp311/rdkit-2025.3.3-cp311-cp311-manylinux_2_28_x86_64.whl\n!pip install mordred --no-index --find-links=file:///kaggle/input/mordred-1-2-0-py3-none-any/","metadata":{"_uuid":"e91e67d4-0f33-4f79-b9dc-dc878e6e0f72","_cell_guid":"b6011687-fd2a-4779-9f9c-dc20380d1936","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:25:10.630185Z","iopub.execute_input":"2025-07-18T18:25:10.631108Z","iopub.status.idle":"2025-07-18T18:25:24.387443Z","shell.execute_reply.started":"2025-07-18T18:25:10.631074Z","shell.execute_reply":"2025-07-18T18:25:24.386189Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom lightgbm import LGBMRegressor\nfrom xgboost import XGBRegressor\nfrom catboost import CatBoostRegressor\n# Show all columns\nfrom rdkit import Chem\nfrom mordred import Calculator, descriptors\npd.set_option('display.max_columns', None)","metadata":{"_uuid":"2c2aecb0-fa02-492c-aeb9-f14af7283243","_cell_guid":"3f1cb13d-4693-40da-a259-a9b0a19e742d","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:25:24.389821Z","iopub.execute_input":"2025-07-18T18:25:24.390152Z","iopub.status.idle":"2025-07-18T18:25:35.813689Z","shell.execute_reply.started":"2025-07-18T18:25:24.390125Z","shell.execute_reply":"2025-07-18T18:25:35.812489Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tg=pd.read_csv('/kaggle/input/modred-dataset/desc_tg.csv')\ntc=pd.read_csv('/kaggle/input/modred-dataset/desc_tc.csv')\nrg=pd.read_csv('/kaggle/input/modred-dataset/desc_rg.csv')\nffv=pd.read_csv('/kaggle/input/modred-dataset/desc_ffv.csv')\ndensity=pd.read_csv('/kaggle/input/modred-dataset/desc_de.csv')\ntest=pd.read_csv('/kaggle/input/neurips-open-polymer-prediction-2025/test.csv')\nID=test['id']","metadata":{"_uuid":"e6713078-ee43-4bf9-9764-5ba800ba24c3","_cell_guid":"d887aa8e-942a-45bb-8169-c818538d3a0e","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:25:35.814696Z","iopub.execute_input":"2025-07-18T18:25:35.815407Z","iopub.status.idle":"2025-07-18T18:25:58.513465Z","shell.execute_reply.started":"2025-07-18T18:25:35.815357Z","shell.execute_reply":"2025-07-18T18:25:58.511985Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"for i in (tg,tc,rg,ffv,density):\n     i.drop(columns=[col for col in i.columns if i[col].nunique() == 1],axis=1,inplace=True)","metadata":{"_uuid":"a613807d-f9ff-477f-b1d4-67e67b4d16b5","_cell_guid":"95f2951b-25de-4795-8e70-6f61643c2fec","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:25:58.515822Z","iopub.execute_input":"2025-07-18T18:25:58.516249Z","iopub.status.idle":"2025-07-18T18:26:01.93085Z","shell.execute_reply.started":"2025-07-18T18:25:58.516222Z","shell.execute_reply":"2025-07-18T18:26:01.929805Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Remove columns with object or category dtype\ntg = tg.select_dtypes(exclude=['object', 'category'])\nrg = rg.select_dtypes(exclude=['object', 'category'])\nffv = ffv.select_dtypes(exclude=['object', 'category'])\ntc = tc.select_dtypes(exclude=['object', 'category'])\ndensity  = density.select_dtypes(exclude=['object', 'category'])","metadata":{"_uuid":"ff12866a-bbcf-4ae1-b3be-94b6585e35cb","_cell_guid":"82cbdf52-02bb-4032-8bd3-e345846c3fa5","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:01.932042Z","iopub.execute_input":"2025-07-18T18:26:01.932305Z","iopub.status.idle":"2025-07-18T18:26:02.032379Z","shell.execute_reply.started":"2025-07-18T18:26:01.932283Z","shell.execute_reply":"2025-07-18T18:26:02.031233Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tg.shape","metadata":{"_uuid":"486da1e3-7bcf-424f-a0f8-168c7a313ca5","_cell_guid":"47040c5c-7ec8-43b4-8a30-2183be14f527","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:02.033482Z","iopub.execute_input":"2025-07-18T18:26:02.033725Z","iopub.status.idle":"2025-07-18T18:26:02.041564Z","shell.execute_reply.started":"2025-07-18T18:26:02.033706Z","shell.execute_reply":"2025-07-18T18:26:02.040665Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tc.shape","metadata":{"_uuid":"55b33376-1fcd-4ed8-976f-0bcd94f2cded","_cell_guid":"1ae597a8-4b04-4c3b-8d24-5a150332c875","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:02.042948Z","iopub.execute_input":"2025-07-18T18:26:02.04334Z","iopub.status.idle":"2025-07-18T18:26:02.065087Z","shell.execute_reply.started":"2025-07-18T18:26:02.043318Z","shell.execute_reply":"2025-07-18T18:26:02.063907Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"density.shape","metadata":{"_uuid":"512899b5-f731-4fc4-8b23-cfebf4d2beca","_cell_guid":"66d9793d-9ebb-48eb-8fec-1420dd0fca18","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:02.066464Z","iopub.execute_input":"2025-07-18T18:26:02.067064Z","iopub.status.idle":"2025-07-18T18:26:02.090403Z","shell.execute_reply.started":"2025-07-18T18:26:02.067027Z","shell.execute_reply":"2025-07-18T18:26:02.089225Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"rg.shape","metadata":{"_uuid":"283ac42b-4a0c-4e45-9265-c161aa78cd8f","_cell_guid":"11fc7aa6-0c30-4dea-a3a8-468b71c3d064","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:02.091532Z","iopub.execute_input":"2025-07-18T18:26:02.091805Z","iopub.status.idle":"2025-07-18T18:26:02.110258Z","shell.execute_reply.started":"2025-07-18T18:26:02.091774Z","shell.execute_reply":"2025-07-18T18:26:02.109195Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Build Mordred descriptors for test\nmols_test = [Chem.MolFromSmiles(s) for s in test.SMILES]\ncalc = Calculator(descriptors, ignore_3D=True)  # 2D descriptors only\ndesc_test = calc.pandas(mols_test)\n\n# Make columns string & numeric only (no dropping beyond that)\ndesc_test.columns = desc_test.columns.map(str)\ndesc_test = desc_test.select_dtypes(include=[np.number]).copy()\ndesc_test.replace([np.inf, -np.inf], np.nan, inplace=True)","metadata":{"_uuid":"86daa337-aad0-46e9-8487-1ecefc3b4ba1","_cell_guid":"08facb0c-350b-417e-8b82-fff4aafc267c","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:02.114687Z","iopub.execute_input":"2025-07-18T18:26:02.11542Z","iopub.status.idle":"2025-07-18T18:26:03.000726Z","shell.execute_reply.started":"2025-07-18T18:26:02.115374Z","shell.execute_reply":"2025-07-18T18:26:02.999459Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def model(train_d, test_d, model_class, target, submission=False, model_params=None, clip_pred=False):\n    \"\"\"\n    Train a simple model and return MAE (validation) or predictions (submission).\n    FIX:\n      - Use TRAIN feature list as authoritative (no intersection shrink)\n      - Create any missing test columns and impute with train medians\n      - Replace inf with NaN and impute consistently\n    \"\"\"\n    if model_params is None:\n        model_params = {}\n\n    # Ensure string columns\n    train_d = train_d.copy()\n    train_d.columns = train_d.columns.map(str)\n    test_d = test_d.copy()\n    test_d.columns = test_d.columns.map(str)\n\n    # Keep numeric on train; ensure target exists\n    train_d = train_d.select_dtypes(include=[np.number]).copy()\n    assert target in train_d.columns, f\"{target} missing in training table\"\n\n    # Split features/labels\n    y = train_d[target].astype(float)\n    X = train_d.drop(columns=[target]).copy()\n\n    # Authoritative feature list from TRAIN\n    feat_cols = list(X.columns)\n\n    # Align TEST to TRAIN features: add missing columns, order identically\n    Xt = test_d.copy()\n    # Keep numeric only on test too\n    Xt = Xt.select_dtypes(include=[np.number]).copy()\n    for c in feat_cols:\n        if c not in Xt.columns:\n            Xt[c] = np.nan\n    # Extra test columns (not in train) are ignored by selecting feat_cols\n    Xt = Xt[feat_cols]\n\n    # Clean inf/NaN and impute with train medians\n    X.replace([np.inf, -np.inf], np.nan, inplace=True)\n    Xt.replace([np.inf, -np.inf], np.nan, inplace=True)\n\n    # Drop rows where y is NaN\n    mask = y.notna().values\n    X = X.loc[mask].copy()\n    y = y.loc[mask].copy()\n\n    # Train medians for imputation\n    med = X.median()\n    X = X.fillna(med)\n    Xt = Xt.fillna(med)\n\n    # (Optional) very low-variance columns could be dropped, but keep it stable for now\n\n    # Train/val or full train\n    Model = model_class(**model_params)\n\n    if not submission:\n        X_tr, X_va, y_tr, y_va = train_test_split(X, y, test_size=0.05, random_state=10)\n        Model.fit(X_tr, y_tr)\n        y_pred = Model.predict(X_va)\n        if clip_pred:\n            lo, hi = np.percentile(y_tr, [0.5, 99.5])\n            y_pred = np.clip(y_pred, lo, hi)\n        return mean_absolute_error(y_va, y_pred)\n\n    # submission=True\n    Model.fit(X, y)\n    pred = Model.predict(Xt)\n    if clip_pred:\n        lo, hi = np.percentile(y, [0.5, 99.5])\n        pred = np.clip(pred, lo, hi)\n    return pred","metadata":{"_uuid":"e1a2e108-c658-4757-9e26-857675d990fe","_cell_guid":"f256aec2-b9a5-41b2-acea-c1e6c5feb30d","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:03.010046Z","iopub.execute_input":"2025-07-18T18:26:03.010406Z","iopub.status.idle":"2025-07-18T18:26:03.042079Z","shell.execute_reply.started":"2025-07-18T18:26:03.010384Z","shell.execute_reply":"2025-07-18T18:26:03.040869Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# model(tc,,'Tc')\nmodel(tg,desc_test,LGBMRegressor,'Tg',submission=False)","metadata":{"_uuid":"96261619-81fc-4337-a9e2-d07c8fc5bb17","_cell_guid":"754e8271-6d56-4788-8552-f46e65b2547a","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:03.043267Z","iopub.execute_input":"2025-07-18T18:26:03.04356Z","iopub.status.idle":"2025-07-18T18:26:07.822794Z","shell.execute_reply.started":"2025-07-18T18:26:03.043539Z","shell.execute_reply":"2025-07-18T18:26:07.821568Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model(ffv,desc_test,LGBMRegressor,'FFV',submission=False)","metadata":{"_uuid":"f9605e95-a704-4873-9b4f-84a2ce6a0fe6","_cell_guid":"e73d2552-3128-4227-afbf-06fa5748b7dd","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:07.824065Z","iopub.execute_input":"2025-07-18T18:26:07.824329Z","iopub.status.idle":"2025-07-18T18:26:12.273096Z","shell.execute_reply.started":"2025-07-18T18:26:07.82431Z","shell.execute_reply":"2025-07-18T18:26:12.272021Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model(tc,desc_test,LGBMRegressor,'Tc',submission=False)","metadata":{"_uuid":"64a1393d-8853-44db-abee-c822e8a06b2d","_cell_guid":"d5098f47-4b6d-4570-ac8a-b23f5f33c8bd","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:12.274179Z","iopub.execute_input":"2025-07-18T18:26:12.274459Z","iopub.status.idle":"2025-07-18T18:26:14.017529Z","shell.execute_reply.started":"2025-07-18T18:26:12.274438Z","shell.execute_reply":"2025-07-18T18:26:14.01658Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model(density,desc_test,LGBMRegressor,'Density',submission=False)","metadata":{"_uuid":"c1153f07-290a-4854-8704-bdeb53049310","_cell_guid":"559976a9-6214-465f-8a52-6005b3b91934","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:14.018662Z","iopub.execute_input":"2025-07-18T18:26:14.019015Z","iopub.status.idle":"2025-07-18T18:26:16.06026Z","shell.execute_reply.started":"2025-07-18T18:26:14.018985Z","shell.execute_reply":"2025-07-18T18:26:16.059148Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model(rg,desc_test,LGBMRegressor,'Rg',submission=False)","metadata":{"_uuid":"7001ce25-a022-4ab5-8861-4fd9d1ed2414","_cell_guid":"1af6f6a2-4cae-46ba-b34e-2f297a6b3a44","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:16.061489Z","iopub.execute_input":"2025-07-18T18:26:16.062465Z","iopub.status.idle":"2025-07-18T18:26:16.957998Z","shell.execute_reply.started":"2025-07-18T18:26:16.062422Z","shell.execute_reply":"2025-07-18T18:26:16.956894Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tg.shape","metadata":{"_uuid":"97fa7cc0-02ca-48a8-aedc-2b6e5343ddbd","_cell_guid":"c8f51e47-0a62-4bc8-9d41-2a4c1a5a8846","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:16.959147Z","iopub.execute_input":"2025-07-18T18:26:16.959507Z","iopub.status.idle":"2025-07-18T18:26:16.966645Z","shell.execute_reply.started":"2025-07-18T18:26:16.959469Z","shell.execute_reply":"2025-07-18T18:26:16.965696Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"desc_test.shape","metadata":{"_uuid":"56d7fd6c-1db9-4fe1-8531-fd9120f0f056","_cell_guid":"25b2d30e-23ae-4b6e-9988-fd2bd4af848e","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:16.967988Z","iopub.execute_input":"2025-07-18T18:26:16.968288Z","iopub.status.idle":"2025-07-18T18:26:16.986972Z","shell.execute_reply.started":"2025-07-18T18:26:16.968249Z","shell.execute_reply":"2025-07-18T18:26:16.985725Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# model(tg,desc_test,LGBMRegressor,'Tg',submission=True)","metadata":{"_uuid":"bf3a0b26-19eb-4b38-b990-6a2950b6a1bc","_cell_guid":"b1616f6d-e88a-4591-84a4-c9ef23cb4ae3","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:16.988165Z","iopub.execute_input":"2025-07-18T18:26:16.989503Z","iopub.status.idle":"2025-07-18T18:26:17.0078Z","shell.execute_reply.started":"2025-07-18T18:26:16.989478Z","shell.execute_reply":"2025-07-18T18:26:17.00681Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":" # Finally, we use the model to predict on the test set and prepare the submission file.\n\nsub={'id':ID,'Tg':model(tg,desc_test,CatBoostRegressor,'Tg',submission=True),\n     'FFV':model(ffv,desc_test,CatBoostRegressor,'FFV',submission=True),\n     'Tc':model(tc,desc_test,CatBoostRegressor,'Tc',submission=True),\n     'Density':model(density,desc_test,CatBoostRegressor,'Density',submission=True),\n     'Rg':model(rg,desc_test,CatBoostRegressor,'Rg',submission=True)}","metadata":{"_uuid":"23cf1726-22b9-49c4-9a50-c09d7f233fea","_cell_guid":"e7b23a05-fb91-4107-ad32-19574bf45e31","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:26:17.008919Z","iopub.execute_input":"2025-07-18T18:26:17.009723Z","iopub.status.idle":"2025-07-18T18:30:19.085162Z","shell.execute_reply.started":"2025-07-18T18:26:17.009684Z","shell.execute_reply":"2025-07-18T18:30:19.084134Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"submission=pd.DataFrame(sub)","metadata":{"_uuid":"345b6cee-042a-4fec-aaff-8de13baad8c3","_cell_guid":"df28f36d-6209-48bd-bc92-72399e669020","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:30:19.08641Z","iopub.execute_input":"2025-07-18T18:30:19.086758Z","iopub.status.idle":"2025-07-18T18:30:19.092349Z","shell.execute_reply.started":"2025-07-18T18:30:19.086729Z","shell.execute_reply":"2025-07-18T18:30:19.091109Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"submission","metadata":{"_uuid":"d82e72d6-9ffa-45aa-9208-ae3ed8722d46","_cell_guid":"e1ffd1c4-a264-4fb2-b566-8ef954ef76fe","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:30:19.093347Z","iopub.execute_input":"2025-07-18T18:30:19.093574Z","iopub.status.idle":"2025-07-18T18:30:19.131258Z","shell.execute_reply.started":"2025-07-18T18:30:19.093557Z","shell.execute_reply":"2025-07-18T18:30:19.129962Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"submission.to_csv('submission.csv',index=False)","metadata":{"_uuid":"dc4a6235-57d2-48f8-bfef-9dcfa8281ff2","_cell_guid":"4d340849-dbd5-4957-9c23-d5b1f88d4c74","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-07-18T18:30:19.132258Z","iopub.execute_input":"2025-07-18T18:30:19.132654Z","iopub.status.idle":"2025-07-18T18:30:19.144436Z","shell.execute_reply.started":"2025-07-18T18:30:19.132621Z","shell.execute_reply":"2025-07-18T18:30:19.143115Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null}]}